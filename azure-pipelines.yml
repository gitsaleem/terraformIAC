trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Install the latest version of Terraform using a specific TerraformInstaller task
- task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Install latest Terraform'
  inputs:
    terraformVersion: 'latest'

# Install a specific version of Terraform (e.g., 0.14.3) using a specific TerraformInstaller task
- task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  displayName: 'Install specific Terraform version'
  inputs:
    terraformVersion: '0.14.3'

# Check Terraform version
- task: TerraformCLI@0
  displayName: 'Check Terraform version'
  inputs:
    command: 'version'

# Apply Terraform configuration with service connection and subscription ID override
- task: TerraformCLI@1
  displayName: 'Terraform Apply with Azure Service Connection'
  inputs:
    command: 'apply'
    environmentServiceName: 'My Azure Service Connection'
    providerAzureRmSubscriptionId: 'my-backend-subscription-id'

# Apply Terraform configuration with automatic Azure CLI login
- task: TerraformCLI@1
  displayName: 'Terraform Apply with Az Login'
  inputs:
    command: 'apply'
    environmentServiceName: 'My Azure Service Connection'
    runAzLogin: true
